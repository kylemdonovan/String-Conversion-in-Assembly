Microsoft (R) Macro Assembler Version 14.29.30143.0	    05/03/22 02:53:38
"Proj 3     (Project3_Donovaky.asm			     Page 1 - 1


				TITLE Proj 3     (Project3_Donovaky.asm)

				; Author: 	Kyle Donovan
				; Last Modified:	4/28/2022
				; Course number/section:   CS271 Section 400
				; Description: Requests user to input numbers infinitely and calculates the average, max, min, sum, and the .01 average.

 =-000000C8			NEG_TWO_HUN = -200
 =-00000064			NEG_ONE_HUN = -100
 =-00000032			NEG_FIFTY = -50
 =-00000001			NEG_ONE = -1
 = 00000000			ZERO = 0
 = 00000001			ONE = 1
 =-000003E8			NEG_ONE_K = -1000
 = 000003E8			ONE_K = 1000

				INCLUDE Irvine32.inc
			      C ; Include file for Irvine32.lib             (Irvine32.inc)
			      C 
			      C ;OPTION CASEMAP:NONE		; optional: make identifiers case-sensitive
			      C 
			      C INCLUDE SmallWin.inc		; MS-Windows prototypes, structures, and constants
			      C .NOLIST
			      C .LIST
			      C 
			      C INCLUDE VirtualKeys.inc
			      C ; VirtualKeys.inc
			      C .NOLIST
			      C .LIST
			      C 
			      C 
			      C .NOLIST
			      C .LIST
			      C 

 00000000			.data
 00000000 2D 2D 57 65 6C	welcome				BYTE	"--Welcome to the Integer Accumulator by Kyle Donovan--", 0
	   63 6F 6D 65 20
	   74 6F 20 74 68
	   65 20 49 6E 74
	   65 67 65 72 20
	   41 63 63 75 6D
	   75 6C 61 74 6F
	   72 20 62 79 20
	   4B 79 6C 65 20
	   44 6F 6E 6F 76
	   61 6E 2D 2D 00
 00000037 57 68 61 74 20	request_username	BYTE	"What is your name? ", 0
	   69 73 20 79 6F
	   75 72 20 6E 61
	   6D 65 3F 20 00
 0000004B 50 6C 65 61 73	instructions		BYTE	"Please enter a number between [-200, -100]  or [-50, -1]!", 0
	   65 20 65 6E 74
	   65 72 20 61 20
	   6E 75 6D 62 65
	   72 20 62 65 74
	   77 65 65 6E 20
	   5B 2D 32 30 30
	   2C 20 2D 31 30
	   30 5D 20 20 6F
	   72 20 5B 2D 35
	   30 2C 20 2D 31
	   5D 21 00
 00000085 45 6E 74 65 72	instructions_2		BYTE	"Enter a non-negative number when you are finished to see results.", 0
	   20 61 20 6E 6F
	   6E 2D 6E 65 67
	   61 74 69 76 65
	   20 6E 75 6D 62
	   65 72 20 77 68
	   65 6E 20 79 6F
	   75 20 61 72 65
	   20 66 69 6E 69
	   73 68 65 64 20
	   74 6F 20 73 65
	   65 20 72 65 73
	   75 6C 74 73 2E
	   00
 000000C7  00000021 [		userName			BYTE	33 DUP(0)
	    00
	   ]
 000000E8 48 65 6C 6C 6F	addressing_user		BYTE	"Hello there, ", 0  
	   20 74 68 65 72
	   65 2C 20 00
 000000F6 21 00			exclamation_point	BYTE	"!", 0
 000000F8 41 6E 64 20 73	goodbye				BYTE	"And so ends our fun. Adieu!", 0
	   6F 20 65 6E 64
	   73 20 6F 75 72
	   20 66 75 6E 2E
	   20 41 64 69 65
	   75 21 00
 00000114 45 6E 74 65 72	ask_number			BYTE	"Enter number: ", 0
	   20 6E 75 6D 62
	   65 72 3A 20 00
 00000123 00000000		count				DWORD	0
 00000127 00000000		entered_num			SDWORD	?
 0000012B 00000000		sum 				SDWORD	?
 0000012F 54 68 69 73 20	out_of_range		BYTE	"This number is negative but it is outside of the requested range.", 0
	   6E 75 6D 62 65
	   72 20 69 73 20
	   6E 65 67 61 74
	   69 76 65 20 62
	   75 74 20 69 74
	   20 69 73 20 6F
	   75 74 73 69 64
	   65 20 6F 66 20
	   74 68 65 20 72
	   65 71 75 65 73
	   74 65 64 20 72
	   61 6E 67 65 2E
	   00
 00000171 FFFFFF38		max					SDWORD	-200
 00000175 FFFFFFFF		min					SDWORD	-1
 00000179 59 6F 75 20 65	you_entered			BYTE	"You entered ", 0
	   6E 74 65 72 65
	   64 20 00
 00000186 20 76 61 6C 69	valid_numbers		BYTE	" valid numbers", 0
	   64 20 6E 75 6D
	   62 65 72 73 00
 00000195 54 68 65 20 6D	max_preface			BYTE	"The maximum valid number is ", 0
	   61 78 69 6D 75
	   6D 20 76 61 6C
	   69 64 20 6E 75
	   6D 62 65 72 20
	   69 73 20 00
 000001B2 54 68 65 20 6D	min_preface			BYTE	"The minimum valid number is ", 0
	   69 6E 69 6D 75
	   6D 20 76 61 6C
	   69 64 20 6E 75
	   6D 62 65 72 20
	   69 73 20 00
 000001CF 54 68 65 20 73	sum_preface			BYTE	"The sum of your numbers is ", 0
	   75 6D 20 6F 66
	   20 79 6F 75 72
	   20 6E 75 6D 62
	   65 72 73 20 69
	   73 20 00
 000001EB 00000000		avg					SDWORD	?
 000001EF 54 68 65 20 61	avg_preface			BYTE	"The average of your valid numbers is ", 0
	   76 65 72 61 67
	   65 20 6F 66 20
	   79 6F 75 72 20
	   76 61 6C 69 64
	   20 6E 75 6D 62
	   65 72 73 20 69
	   73 20 00
 00000215 00000000		rounded_avg			SDWORD	?
 00000219 54 68 65 20 72	round_avg_preface	BYTE	"The rounded average is ", 0
	   6F 75 6E 64 65
	   64 20 61 76 65
	   72 61 67 65 20
	   69 73 20 00
 00000231 00000000		avg_remainder		SDWORD	?	
 00000235 00000000		new_remainder		SDWORD	?
 00000239 2A 2A 45 43 3A	extra_credit_1		BYTE	"**EC: Number the lines during user input. Increment the line number only for valid number entries", 0
	   20 4E 75 6D 62
	   65 72 20 74 68
	   65 20 6C 69 6E
	   65 73 20 64 75
	   72 69 6E 67 20
	   75 73 65 72 20
	   69 6E 70 75 74
	   2E 20 49 6E 63
	   72 65 6D 65 6E
	   74 20 74 68 65
	   20 6C 69 6E 65
	   20 6E 75 6D 62
	   65 72 20 6F 6E
	   6C 79 20 66 6F
	   72 20 76 61 6C
	   69 64 20 6E 75
	   6D 62 65 72 20
	   65 6E 74 72 69
	   65 73 00
 0000029B 2A 2A 45 43 3A	extra_credit_2		BYTE	"**EC: Calculate to the nearest .01 average", 0
	   20 43 61 6C 63
	   75 6C 61 74 65
	   20 74 6F 20 74
	   68 65 20 6E 65
	   61 72 65 73 74
	   20 2E 30 31 20
	   61 76 65 72 61
	   67 65 00

 000002C6 4E 6F 20 76 61	no_number			BYTE	"No valid number was entered."
	   6C 69 64 20 6E
	   75 6D 62 65 72
	   20 77 61 73 20
	   65 6E 74 65 72
	   65 64 2E

 000002E2 00000000		one_k_sum			SDWORD	?
 000002E6 00000000		one_k_avg			SDWORD	?
 000002EA 00000000		one_k_val			SDWORD	?
 000002EE 00000000		one_k_remain		SDWORD	?
 000002F2 54 68 65 20 2E	one_k_preface		BYTE	"The .01 average is .", 0
	   30 31 20 61 76
	   65 72 61 67 65
	   20 69 73 20 2E
	   00

 00000000			.code
 00000000			main PROC

				;------------------------------------------------------------------------
				;Introduce ourselves and our program to our user. Instructs user on how to use program (Introduction)
				;------------------------------------------------------------------------
 00000000			_Introduction:
 00000000  BA 00000000 R		mov		EDX, OFFSET welcome
 00000005  E8 00000000 E		call	WriteString
 0000000A  E8 00000000 E		call	CrLf
 0000000F  BA 00000239 R		mov		EDX, OFFSET extra_credit_1
 00000014  E8 00000000 E		call	WriteString
 00000019  E8 00000000 E		call	CrLf
 0000001E  BA 0000029B R		mov		EDX, OFFSET extra_credit_2
 00000023  E8 00000000 E		call	WriteString
 00000028  E8 00000000 E		call	CrLf


				;------------------------------------------------------------------------
				;Gets the user's name
				;------------------------------------------------------------------------
 0000002D			_Get_Username:
 0000002D  BA 00000037 R		mov		EDX, OFFSET request_username
 00000032  E8 00000000 E		call	WriteString
 00000037  BA 000000C7 R		mov		EDX, OFFSET userName
 0000003C  B9 00000020			mov		ECX, 32
 00000041  E8 00000000 E		call	ReadString

				;------------------------------------------------------------------------
				;Greets our user
				;------------------------------------------------------------------------
 00000046			_Greet_User:
 00000046  BA 000000E8 R		mov		EDX, OFFSET addressing_user
 0000004B  E8 00000000 E		call	WriteString
 00000050  BA 000000C7 R		mov		EDX, OFFSET userName
 00000055  E8 00000000 E		call	WriteString
 0000005A  BA 000000F6 R		mov		EDX, OFFSET exclamation_point
 0000005F  E8 00000000 E		call	WriteString
 00000064  E8 00000000 E		call	CrLf

				;------------------------------------------------------------------------
				;Gives our user instructions on how to use our program
				;------------------------------------------------------------------------
 00000069			_Give_Instructions:
 00000069  BA 0000004B R		mov		EDX, OFFSET instructions
 0000006E  E8 00000000 E		call	WriteString
 00000073  E8 00000000 E		call	CrLf
 00000078  BA 00000085 R		mov		EDX, OFFSET instructions_2
 0000007D  E8 00000000 E		call	WriteString
 00000082  E8 00000000 E		call	CrLf

				;------------------------------------------------------------------------
				;This is the loop that prompts the user to enter a number and displays count. 
				;------------------------------------------------------------------------
 00000087			_Number_Processor:
 00000087  A1 00000123 R		mov		EAX, count
 0000008C  E8 00000000 E		call	WriteDec
 00000091  BA 00000114 R		mov		EDX, OFFSET ask_number
 00000096  E8 00000000 E		call	WriteString
 0000009B  E8 00000000 E		call	ReadInt
 000000A0  A3 00000127 R		mov		entered_num, EAX
 000000A5  83 F8 00			cmp		EAX, 0
 000000A8  0F 89 0000023F		jns		_No_Number

 000000AE  83 F8 CE			cmp		EAX, NEG_FIFTY
 000000B1  7D 22			jge		_Accumulator

 000000B3  A3 00000127 R		mov		entered_num, EAX
 000000B8  3D FFFFFF38			cmp		EAX, NEG_TWO_HUN
 000000BD  0F 82 0000023B		jb		_Not_In_Range

 000000C3  A3 00000127 R		mov		entered_num, EAX
 000000C8  83 F8 9C			cmp		EAX, NEG_ONE_HUN
 000000CB  0F 8F 0000022D		jg		_Not_In_Range
 000000D1  76 02			jbe		_Accumulator
 000000D3  E2 B2			loop	_Number_Processor

				;------------------------------------------------------------------------
				;Prints the average
				;------------------------------------------------------------------------
 000000D5			_Accumulator:
 000000D5  8B 15 00000127 R		mov		EDX, entered_num
 000000DB  8B 15 00000127 R		mov		EDX, entered_num
 000000E1  3B 15 00000175 R		cmp		EDX, min
 000000E7  72 16			jb		_Set_New_Min
 000000E9  3B 15 00000171 R		cmp		EDX, max
 000000EF  7F 1C			jg		_Set_New_Max

 000000F1  01 15 0000012B R		add		sum, EDX
 000000F7  FF 05 00000123 R		inc		count
 000000FD  EB 88			jmp		_Number_Processor

				;------------------------------------------------------------------------
				;Sets new min
				;------------------------------------------------------------------------
 000000FF			_Set_New_Min:
 000000FF  8B 15 00000127 R		mov		EDX, entered_num
 00000105  89 15 00000175 R		mov		min, EDX
 0000010B  EB C8			jmp		_Accumulator

				;------------------------------------------------------------------------
				;Sets new max
				;------------------------------------------------------------------------
 0000010D			_Set_New_Max:
 0000010D  8B 15 00000127 R		mov		EDX, entered_num
 00000113  89 15 00000171 R		mov		max, EDX
 00000119  EB BA			jmp		_Accumulator

				;------------------------------------------------------------------------
				;Calculates the average and sends to the rounder if needed, otherwise sends to display, may also display 
				;------------------------------------------------------------------------
 0000011B			_Calculations:
 0000011B  A1 0000012B R		mov		EAX, sum
 00000120  99				cdq
 00000121  8B 1D 00000123 R		mov		EBX, count
 00000127  F7 FB			idiv	EBX
 00000129  A3 000001EB R		mov		avg, EAX
 0000012E  A1 000001EB R		mov		EAX, avg
 00000133  89 15 00000231 R		mov		avg_remainder, EDX

 00000139  A1 00000231 R		mov		EAX, avg_remainder
 0000013E  BB FFFFFC18			mov		EBX, -1000
 00000143  F7 EB			imul	EBX
 00000145  A3 00000231 R		mov		avg_remainder, EAX
 0000014A  99				cdq
 0000014B  8B 1D 00000123 R		mov		EBX, count
 00000151  F7 FB			idiv	EBX
 00000153  A3 00000235 R		mov		new_remainder, EAX

 00000158  A1 00000235 R		mov		EAX, new_remainder
 0000015D  3D 000001F4			cmp		EAX, 500
 00000162  0F 8F 000000AC		jg		_Round_Up_Avg
 00000168  E9 000000B6			jmp		_Results

					
				;------------------------------------------------------------------------
				;Calculates the .01 average
				;------------------------------------------------------------------------
 0000016D			_Super_Avg:
 0000016D  A1 0000012B R		mov		EAX, sum       
 00000172  BB 000003E8			mov		EBX, 1000
 00000177  F7 EB			imul	EBX
 00000179  8B 1D 00000123 R		mov     EBX, count
 0000017F  99				cdq
 00000180  F7 FB			idiv    EBX            
 00000182  BB 0000000A			mov     EBX, 10
 00000187  99			    cdq
 00000188  F7 FB		    idiv    EBX
 0000018A  A3 000002E6 R	    mov     one_k_avg, EAX      
 0000018F  8B C2		    mov     EAX, EDX
 00000191  89 15 000002EE R	    mov     one_k_remain, EDX   
 00000197  A1 000002EE R	    mov     EAX, one_k_remain
 0000019C  BB FFFFFFFF		    mov     EBX, -1           
 000001A1  F7 EB		    imul    EBX
 000001A3  A3 000002EE R	    mov     one_k_remain, EAX    ;to determine if rounding is needed
 000001A8  83 3D 000002EE R	    cmp     one_k_remain, 6
	   06
 000001AF  7D 2E		    jge     _Second_Calc

				    ;tests if current remainder is 6
 000001B1  A1 000002E6 R	    mov		EAX, one_k_avg
 000001B6  BB 00000064		    mov		EBX, 100
 000001BB  99			    cdq
 000001BC  F7 FB		    idiv	EBX					 ;divs 100
 000001BE  A3 000002E6 R	    mov		one_k_avg, EAX
 000001C3  89 15 000002EE R	    mov		one_k_remain, EDX
 000001C9  A1 000002EE R	    mov		EAX, one_k_remain    ;must be positive
 000001CE  BB FFFFFFFF		    mov		EBX, -1
 000001D3  F7 EB		    imul	EBX
 000001D5  A3 000002EE R	    mov     one_k_remain, EAX
 000001DA  E9 000000E3		    jmp     _The_Second_Print


				;------------------------------------------------------------------------
				;Rounds the super decimal average if needed
				;------------------------------------------------------------------------
 000001DF			_Second_Calc:
 000001DF  A1 000002E6 R		mov		EAX, one_k_avg
 000001E4  BB 00000001			mov		EBX, 1
 000001E9  2B C3			sub		EAX,EBX
 000001EB  BB 00000064			mov		EBX, 100
 000001F0  99				cdq
 000001F1  F7 FB			idiv	EBX
 000001F3  A3 000002E6 R		mov     one_k_avg, EAX
 000001F8  89 15 000002EE R	    mov     one_k_remain, EDX    
 000001FE  A1 000002EE R	    mov     EAX, one_k_remain
 00000203  BB FFFFFFFF		    mov     EBX, -1            
 00000208  F7 EB		    imul    EBX
 0000020A  A3 000002EE R	    mov     one_k_remain, EAX
 0000020F  E9 000000AE		    jmp     _The_Second_Print

				;------------------------------------------------------------------------
				;Rounds up the number if necessary
				;------------------------------------------------------------------------
 00000214			_Round_Up_Avg:
 00000214  A1 000001EB R		mov		EAX, avg
 00000219  83 C0 01			add		EAX, ONE
 0000021C  A3 000001EB R		mov		avg, EAX
 00000221  EB 00			jmp		_Results
					
				;------------------------------------------------------------------------
				;Displays our results
				;------------------------------------------------------------------------
 00000223			_Results:
				;this portion sends the program to end if it received zero valid inputs
 00000223  8B 15 00000123 R		mov		EDX, count
 00000229  83 3D 00000123 R		cmp		count, 0
	   00
 00000230  0F 8E 000000A6		jle		_Goodbye
					
				;display number of valid number entries
 00000236  BA 00000179 R		mov		EDX, OFFSET you_entered
 0000023B  E8 00000000 E		call	WriteString
 00000240  A1 00000123 R		mov		EAX, count
 00000245  E8 00000000 E		call	WriteDec
 0000024A  BA 00000186 R		mov		EDX, OFFSET valid_numbers
 0000024F  E8 00000000 E		call	WriteString
 00000254  E8 00000000 E		call	CrLf

				;displays min
 00000259  A1 00000175 R		mov		EAX, min
 0000025E  BA 000001B2 R		mov		EDX, OFFSET min_preface
 00000263  E8 00000000 E		call	WriteString
 00000268  E8 00000000 E		call	WriteInt
 0000026D  E8 00000000 E		call	CrLf

				;displays max
 00000272  A1 00000171 R		mov		EAX, max
 00000277  BA 00000195 R		mov		EDX, OFFSET max_preface
 0000027C  E8 00000000 E		call	WriteString
 00000281  E8 00000000 E		CALL	WriteInt
 00000286  E8 00000000 E		call	CrLf

				;prints the sum of valid numbers
 0000028B  A1 0000012B R		mov		EAX, sum
 00000290  BA 000001CF R		mov		EDX, OFFSET sum_preface
 00000295  E8 00000000 E		call	WriteString
 0000029A  E8 00000000 E		call	WriteInt
 0000029F  E8 00000000 E		call	CrLf

				;Prints the average
 000002A4  BA 000001EF R		mov		EDX, OFFSET avg_preface
 000002A9  E8 00000000 E		call	WriteString
 000002AE  A1 000001EB R		mov		EAX, avg
 000002B3  E8 00000000 E		call	WriteInt
 000002B8  E8 00000000 E		call	CrLf

 000002BD  E9 FFFFFEAB			jmp		_Super_Avg

				;------------------------------------------------------------------------
				;Displays the .01 EC 
				;------------------------------------------------------------------------
 000002C2			_The_Second_Print:
 000002C2  BA 000002F2 R		mov		EDX, OFFSET one_k_preface
 000002C7  E8 00000000 E		call	WriteString
 000002CC  8B 0D 000002E6 R		mov		ECX, one_k_avg
 000002D2  E8 00000000 E		call	WriteDec
 000002D7  E8 00000000 E		call	CrLf

				;------------------------------------------------------------------------
				;Bids our user adeiu
				;------------------------------------------------------------------------
 000002DC			_Goodbye:
 000002DC  E8 00000000 E		call	CrLf
 000002E1  BA 000000F8 R		mov		EDX, OFFSET goodbye
 000002E6  E8 00000000 E		call	WriteString
 000002EB  EB 25			jmp		_Exit


				;------------------------------------------------------------------------
				;Gets the user's name
				;------------------------------------------------------------------------
 000002ED			_No_Number:	
 000002ED  E8 00000000 E		call	CrLf
 000002F2  BA 000002C6 R		mov		EDX, OFFSET no_number
 000002F7  E8 00000000 E		call	WriteString
 000002FC  EB DE			jmp		_Goodbye

				;------------------------------------------------------------------------
				;Gets the user's name
				;------------------------------------------------------------------------
 000002FE			_Not_In_Range:
 000002FE  BA 0000012F R		mov		EDX, OFFSET out_of_range
 00000303  E8 00000000 E		call	WriteString
 00000308  E8 00000000 E		call	CrLf
 0000030D  E9 FFFFFD75			jmp		_Number_Processor

				;------------------------------------------------------------------------
				;Exits the program
				;------------------------------------------------------------------------
 00000312			_Exit:
					Invoke ExitProcess, 0	; exit to operating system
 00000312  6A 00	   *	    push   +000000000h
 00000314  E8 00000000 E   *	    call   ExitProcess

 00000319			main ENDP

				END main
Microsoft (R) Macro Assembler Version 14.29.30143.0	    05/03/22 02:53:38
"Proj 3     (Project3_Donovaky.asm			     Symbols 2 - 1




Structures and Unions:

                N a m e                  Size
                                         Offset      Type

CONSOLE_CURSOR_INFO  . . . . . .	 00000008
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  bVisible . . . . . . . . . . .	 00000004	 DWord
CONSOLE_SCREEN_BUFFER_INFO . . .	 00000016
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  dwCursorPosition . . . . . . .	 00000004	 DWord
  wAttributes  . . . . . . . . .	 00000008	 Word
  srWindow . . . . . . . . . . .	 0000000A	 QWord
  dwMaximumWindowSize  . . . . .	 00000012	 DWord
COORD  . . . . . . . . . . . . .	 00000004
  X  . . . . . . . . . . . . . .	 00000000	 Word
  Y  . . . . . . . . . . . . . .	 00000002	 Word
FILETIME . . . . . . . . . . . .	 00000008
  loDateTime . . . . . . . . . .	 00000000	 DWord
  hiDateTime . . . . . . . . . .	 00000004	 DWord
FOCUS_EVENT_RECORD . . . . . . .	 00000004
  bSetFocus  . . . . . . . . . .	 00000000	 DWord
FPU_ENVIRON  . . . . . . . . . .	 0000001C
  controlWord  . . . . . . . . .	 00000000	 Word
  statusWord . . . . . . . . . .	 00000004	 Word
  tagWord  . . . . . . . . . . .	 00000008	 Word
  instrPointerOffset . . . . . .	 0000000C	 DWord
  instrPointerSelector . . . . .	 00000010	 DWord
  operandPointerOffset . . . . .	 00000014	 DWord
  operandPointerSelector . . . .	 00000018	 Word
INPUT_RECORD . . . . . . . . . .	 00000014
  EventType  . . . . . . . . . .	 00000000	 Word
  Event  . . . . . . . . . . . .	 00000004	 XmmWord
  bKeyDown . . . . . . . . . . .	 00000000	 DWord
  wRepeatCount . . . . . . . . .	 00000004	 Word
  wVirtualKeyCode  . . . . . . .	 00000006	 Word
  wVirtualScanCode . . . . . . .	 00000008	 Word
  uChar  . . . . . . . . . . . .	 0000000A	 Word
  UnicodeChar  . . . . . . . . .	 00000000	 Word
  AsciiChar  . . . . . . . . . .	 00000000	 Byte
  dwControlKeyState  . . . . . .	 0000000C	 DWord
  dwMousePosition  . . . . . . .	 00000000	 DWord
  dwButtonState  . . . . . . . .	 00000004	 DWord
  dwMouseControlKeyState . . . .	 00000008	 DWord
  dwEventFlags . . . . . . . . .	 0000000C	 DWord
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  dwCommandId  . . . . . . . . .	 00000000	 DWord
  bSetFocus  . . . . . . . . . .	 00000000	 DWord
KEY_EVENT_RECORD . . . . . . . .	 00000010
  bKeyDown . . . . . . . . . . .	 00000000	 DWord
  wRepeatCount . . . . . . . . .	 00000004	 Word
  wVirtualKeyCode  . . . . . . .	 00000006	 Word
  wVirtualScanCode . . . . . . .	 00000008	 Word
  uChar  . . . . . . . . . . . .	 0000000A	 Word
  UnicodeChar  . . . . . . . . .	 00000000	 Word
  AsciiChar  . . . . . . . . . .	 00000000	 Byte
  dwControlKeyState  . . . . . .	 0000000C	 DWord
MENU_EVENT_RECORD  . . . . . . .	 00000004
  dwCommandId  . . . . . . . . .	 00000000	 DWord
MOUSE_EVENT_RECORD . . . . . . .	 00000010
  dwMousePosition  . . . . . . .	 00000000	 DWord
  dwButtonState  . . . . . . . .	 00000004	 DWord
  dwMouseControlKeyState . . . .	 00000008	 DWord
  dwEventFlags . . . . . . . . .	 0000000C	 DWord
SMALL_RECT . . . . . . . . . . .	 00000008
  Left . . . . . . . . . . . . .	 00000000	 Word
  Top  . . . . . . . . . . . . .	 00000002	 Word
  Right  . . . . . . . . . . . .	 00000004	 Word
  Bottom . . . . . . . . . . . .	 00000006	 Word
SYSTEMTIME . . . . . . . . . . .	 00000010
  wYear  . . . . . . . . . . . .	 00000000	 Word
  wMonth . . . . . . . . . . . .	 00000002	 Word
  wDayOfWeek . . . . . . . . . .	 00000004	 Word
  wDay . . . . . . . . . . . . .	 00000006	 Word
  wHour  . . . . . . . . . . . .	 00000008	 Word
  wMinute  . . . . . . . . . . .	 0000000A	 Word
  wSecond  . . . . . . . . . . .	 0000000C	 Word
  wMilliseconds  . . . . . . . .	 0000000E	 Word
WINDOW_BUFFER_SIZE_RECORD  . . .	 00000004
  dwSize . . . . . . . . . . . .	 00000000	 DWord


Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

FLAT . . . . . . . . . . . . . .	GROUP
STACK  . . . . . . . . . . . . .	32 Bit	 00001000 Para	  Stack	  'STACK'	 
_DATA  . . . . . . . . . . . . .	32 Bit	 00000307 Para	  Public  'DATA'	
_TEXT  . . . . . . . . . . . . .	32 Bit	 00000319 Para	  Public  'CODE'	


Procedures, parameters, and locals:

                N a m e                 Type     Value    Attr

CloseFile  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CloseHandle  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Clrscr . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateFileA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateOutputFile . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Crlf . . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Delay  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DumpMem  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DumpRegs . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ExitProcess  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FileTimeToDosDateTime  . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FileTimeToSystemTime . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FlushConsoleInputBuffer  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FormatMessageA . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCommandLineA  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCommandTail . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleCP . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleCursorInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleMode . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleScreenBufferInfo . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetDateTime  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetFileTime  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetKeyState  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetLastError . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetLocalTime . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetMaxXY . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetMseconds  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetNumberOfConsoleInputEvents  .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetProcessHeap . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetStdHandle . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetSystemTime  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetTextColor . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetTickCount . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Gotoxy . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapAlloc  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapCreate . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapDestroy  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapFree . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapSize . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
IsDigit  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
LocalFree  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MessageBoxA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MsgBoxAsk  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MsgBox . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
OpenInputFile  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ParseDecimal32 . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ParseInteger32 . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
PeekConsoleInputA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Random32 . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
RandomRange  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Randomize  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadChar . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadConsoleA . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadConsoleInputA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadDec  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFile . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFloat  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFromFile . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadHex  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadInt  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadKeyFlush . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadKey  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadString . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleCursorInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleCursorPosition . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleMode . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleScreenBufferSize . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTextAttribute  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTitleA . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleWindowInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetFilePointer . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetLocalTime . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetTextColor . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ShowFPUStack . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Sleep  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
StrLength  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_compare  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_copy . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_length . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_trim . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_ucase  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SystemTimeToFileTime . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WaitMsg  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteBinB  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteBin . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteChar  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleA  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleOutputAttribute  . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleOutputCharacterA . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteDec . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteFile  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteFloat . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteHexB  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteHex . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteInt . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteStackFrameName  . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteStackFrame  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteString  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteToFile  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteWindowsMsg  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
main . . . . . . . . . . . . . .	P Near	 00000000 _TEXT	Length= 00000319 Public STDCALL
  _Introduction  . . . . . . . .	L Near	 00000000 _TEXT	
  _Get_Username  . . . . . . . .	L Near	 0000002D _TEXT	
  _Greet_User  . . . . . . . . .	L Near	 00000046 _TEXT	
  _Give_Instructions . . . . . .	L Near	 00000069 _TEXT	
  _Number_Processor  . . . . . .	L Near	 00000087 _TEXT	
  _Accumulator . . . . . . . . .	L Near	 000000D5 _TEXT	
  _Set_New_Min . . . . . . . . .	L Near	 000000FF _TEXT	
  _Set_New_Max . . . . . . . . .	L Near	 0000010D _TEXT	
  _Calculations  . . . . . . . .	L Near	 0000011B _TEXT	
  _Super_Avg . . . . . . . . . .	L Near	 0000016D _TEXT	
  _Second_Calc . . . . . . . . .	L Near	 000001DF _TEXT	
  _Round_Up_Avg  . . . . . . . .	L Near	 00000214 _TEXT	
  _Results . . . . . . . . . . .	L Near	 00000223 _TEXT	
  _The_Second_Print  . . . . . .	L Near	 000002C2 _TEXT	
  _Goodbye . . . . . . . . . . .	L Near	 000002DC _TEXT	
  _No_Number . . . . . . . . . .	L Near	 000002ED _TEXT	
  _Not_In_Range  . . . . . . . .	L Near	 000002FE _TEXT	
  _Exit  . . . . . . . . . . . .	L Near	 00000312 _TEXT	
printf . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C
scanf  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C
wsprintfA  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C


Symbols:

                N a m e                 Type     Value    Attr

@CodeSize  . . . . . . . . . . .	Number	 00000000h   
@DataSize  . . . . . . . . . . .	Number	 00000000h   
@Interface . . . . . . . . . . .	Number	 00000003h   
@Model . . . . . . . . . . . . .	Number	 00000007h   
@code  . . . . . . . . . . . . .	Text   	 _TEXT
@data  . . . . . . . . . . . . .	Text   	 FLAT
@fardata?  . . . . . . . . . . .	Text   	 FLAT
@fardata . . . . . . . . . . . .	Text   	 FLAT
@stack . . . . . . . . . . . . .	Text   	 FLAT
ALT_MASK . . . . . . . . . . . .	Number	 00000003h   
CAPSLOCK_ON  . . . . . . . . . .	Number	 00000080h   
CREATE_ALWAYS  . . . . . . . . .	Number	 00000002h   
CREATE_NEW . . . . . . . . . . .	Number	 00000001h   
CTRL_MASK  . . . . . . . . . . .	Number	 0000000Ch   
CreateFile . . . . . . . . . . .	Text   	 CreateFileA
DO_NOT_SHARE . . . . . . . . . .	Number	 00000000h   
ENABLE_ECHO_INPUT  . . . . . . .	Number	 00000004h   
ENABLE_LINE_INPUT  . . . . . . .	Number	 00000002h   
ENABLE_MOUSE_INPUT . . . . . . .	Number	 00000010h   
ENABLE_PROCESSED_INPUT . . . . .	Number	 00000001h   
ENABLE_PROCESSED_OUTPUT  . . . .	Number	 00000001h   
ENABLE_WINDOW_INPUT  . . . . . .	Number	 00000008h   
ENABLE_WRAP_AT_EOL_OUTPUT  . . .	Number	 00000002h   
ENHANCED_KEY . . . . . . . . . .	Number	 00000100h   
FALSE  . . . . . . . . . . . . .	Number	 00000000h   
FILE_APPEND_DATA . . . . . . . .	Number	 00000004h   
FILE_ATTRIBUTE_ARCHIVE . . . . .	Number	 00000020h   
FILE_ATTRIBUTE_COMPRESSED  . . .	Number	 00000800h   
FILE_ATTRIBUTE_DEVICE  . . . . .	Number	 00000040h   
FILE_ATTRIBUTE_DIRECTORY . . . .	Number	 00000010h   
FILE_ATTRIBUTE_ENCRYPTED . . . .	Number	 00004000h   
FILE_ATTRIBUTE_HIDDEN  . . . . .	Number	 00000002h   
FILE_ATTRIBUTE_NORMAL  . . . . .	Number	 00000080h   
FILE_ATTRIBUTE_NOT_CONTENT_INDEXED .	Number	 00002000h   
FILE_ATTRIBUTE_OFFLINE . . . . .	Number	 00001000h   
FILE_ATTRIBUTE_READONLY  . . . .	Number	 00000001h   
FILE_ATTRIBUTE_REPARSE_POINT . .	Number	 00000400h   
FILE_ATTRIBUTE_SPARSE_FILE . . .	Number	 00000200h   
FILE_ATTRIBUTE_SYSTEM  . . . . .	Number	 00000004h   
FILE_ATTRIBUTE_TEMPORARY . . . .	Number	 00000100h   
FILE_BEGIN . . . . . . . . . . .	Number	 00000000h   
FILE_CURRENT . . . . . . . . . .	Number	 00000001h   
FILE_DELETE_CHILD  . . . . . . .	Number	 00000040h   
FILE_END . . . . . . . . . . . .	Number	 00000002h   
FILE_READ_DATA . . . . . . . . .	Number	 00000001h   
FILE_SHARE_DELETE  . . . . . . .	Number	 00000004h   
FILE_SHARE_READ  . . . . . . . .	Number	 00000001h   
FILE_SHARE_WRITE . . . . . . . .	Number	 00000002h   
FILE_WRITE_DATA  . . . . . . . .	Number	 00000002h   
FOCUS_EVENT  . . . . . . . . . .	Number	 00000010h   
FORMAT_MESSAGE_ALLOCATE_BUFFER .	Number	 00000100h   
FORMAT_MESSAGE_FROM_SYSTEM . . .	Number	 00001000h   
FormatMessage  . . . . . . . . .	Text   	 FormatMessageA
GENERIC_ALL  . . . . . . . . . .	Number	 10000000h   
GENERIC_EXECUTE  . . . . . . . .	Number	 20000000h   
GENERIC_READ . . . . . . . . . .	Number	 -80000000h   
GENERIC_WRITE  . . . . . . . . .	Number	 40000000h   
GetCommandLine . . . . . . . . .	Text   	 GetCommandLineA
HANDLE . . . . . . . . . . . . .	Text   	 DWORD
HEAP_GENERATE_EXCEPTIONS . . . .	Number	 00000004h   
HEAP_GROWABLE  . . . . . . . . .	Number	 00000002h   
HEAP_NO_SERIALIZE  . . . . . . .	Number	 00000001h   
HEAP_REALLOC_IN_PLACE_ONLY . . .	Number	 00000010h   
HEAP_ZERO_MEMORY . . . . . . . .	Number	 00000008h   
IDABORT  . . . . . . . . . . . .	Number	 00000003h   
IDCANCEL . . . . . . . . . . . .	Number	 00000002h   
IDCLOSE  . . . . . . . . . . . .	Number	 00000008h   
IDCONTINUE . . . . . . . . . . .	Number	 0000000Bh   
IDHELP . . . . . . . . . . . . .	Number	 00000009h   
IDIGNORE . . . . . . . . . . . .	Number	 00000005h   
IDNO . . . . . . . . . . . . . .	Number	 00000007h   
IDOK . . . . . . . . . . . . . .	Number	 00000001h   
IDRETRY  . . . . . . . . . . . .	Number	 00000004h   
IDTIMEOUT  . . . . . . . . . . .	Number	 00007D00h   
IDTRYAGAIN . . . . . . . . . . .	Number	 0000000Ah   
IDYES  . . . . . . . . . . . . .	Number	 00000006h   
INVALID_HANDLE_VALUE . . . . . .	Number	 -00000001h   
KBDOWN_FLAG  . . . . . . . . . .	Number	 00000001h   
KEY_EVENT  . . . . . . . . . . .	Number	 00000001h   
KEY_MASKS  . . . . . . . . . . .	Number	 0000001Fh   
LEFT_ALT_PRESSED . . . . . . . .	Number	 00000002h   
LEFT_CTRL_PRESSED  . . . . . . .	Number	 00000008h   
MB_ABORTRETRYIGNORE  . . . . . .	Number	 00000002h   
MB_APPLMODAL . . . . . . . . . .	Number	 00000000h   
MB_CANCELTRYCONTINUE . . . . . .	Number	 00000006h   
MB_DEFBUTTON1  . . . . . . . . .	Number	 00000000h   
MB_DEFBUTTON2  . . . . . . . . .	Number	 00000100h   
MB_DEFBUTTON3  . . . . . . . . .	Number	 00000200h   
MB_DEFBUTTON4  . . . . . . . . .	Number	 00000300h   
MB_HELP  . . . . . . . . . . . .	Number	 00004000h   
MB_ICONASTERISK  . . . . . . . .	Number	 00000040h   
MB_ICONERROR . . . . . . . . . .	Number	 00000010h   
MB_ICONEXCLAMATION . . . . . . .	Number	 00000030h   
MB_ICONHAND  . . . . . . . . . .	Number	 00000010h   
MB_ICONINFORMATION . . . . . . .	Number	 00000040h   
MB_ICONQUESTION  . . . . . . . .	Number	 00000020h   
MB_ICONSTOP  . . . . . . . . . .	Number	 00000010h   
MB_ICONWARNING . . . . . . . . .	Number	 00000030h   
MB_OKCANCEL  . . . . . . . . . .	Number	 00000001h   
MB_OK  . . . . . . . . . . . . .	Number	 00000000h   
MB_RETRYCANCEL . . . . . . . . .	Number	 00000005h   
MB_SYSTEMMODAL . . . . . . . . .	Number	 00001000h   
MB_TASKMODAL . . . . . . . . . .	Number	 00002000h   
MB_USERICON  . . . . . . . . . .	Number	 00000080h   
MB_YESNOCANCEL . . . . . . . . .	Number	 00000003h   
MB_YESNO . . . . . . . . . . . .	Number	 00000004h   
MENU_EVENT . . . . . . . . . . .	Number	 00000008h   
MOUSE_EVENT  . . . . . . . . . .	Number	 00000002h   
MessageBox . . . . . . . . . . .	Text   	 MessageBoxA
NEG_FIFTY  . . . . . . . . . . .	Number	 -00000032h   
NEG_ONE_HUN  . . . . . . . . . .	Number	 -00000064h   
NEG_ONE_K  . . . . . . . . . . .	Number	 -000003E8h   
NEG_ONE  . . . . . . . . . . . .	Number	 -00000001h   
NEG_TWO_HUN  . . . . . . . . . .	Number	 -000000C8h   
NULL . . . . . . . . . . . . . .	Number	 00000000h   
NUMLOCK_ON . . . . . . . . . . .	Number	 00000020h   
ONE_K  . . . . . . . . . . . . .	Number	 000003E8h   
ONE  . . . . . . . . . . . . . .	Number	 00000001h   
OPEN_ALWAYS  . . . . . . . . . .	Number	 00000004h   
OPEN_EXISTING  . . . . . . . . .	Number	 00000003h   
PeekConsoleInput . . . . . . . .	Text   	 PeekConsoleInputA
RIGHT_ALT_PRESSED  . . . . . . .	Number	 00000001h   
RIGHT_CTRL_PRESSED . . . . . . .	Number	 00000004h   
ReadConsoleInput . . . . . . . .	Text   	 ReadConsoleInputA
ReadConsole  . . . . . . . . . .	Text   	 ReadConsoleA
SCROLLLOCK_ON  . . . . . . . . .	Number	 00000040h   
SHIFT_MASK . . . . . . . . . . .	Number	 00000010h   
SHIFT_PRESSED  . . . . . . . . .	Number	 00000010h   
STD_ERROR_HANDLE . . . . . . . .	Number	 -0000000Ch   
STD_INPUT_HANDLE . . . . . . . .	Number	 -0000000Ah   
STD_OUTPUT_HANDLE  . . . . . . .	Number	 -0000000Bh   
SetConsoleTitle  . . . . . . . .	Text   	 SetConsoleTitleA
TAB  . . . . . . . . . . . . . .	Number	 00000009h   
TRUE . . . . . . . . . . . . . .	Number	 00000001h   
TRUNCATE_EXISTING  . . . . . . .	Number	 00000005h   
VK_11  . . . . . . . . . . . . .	Number	 000000BDh   
VK_12  . . . . . . . . . . . . .	Number	 000000BBh   
VK_ADD . . . . . . . . . . . . .	Number	 0000006Bh   
VK_BACK  . . . . . . . . . . . .	Number	 00000008h   
VK_CANCEL  . . . . . . . . . . .	Number	 00000003h   
VK_CAPITAL . . . . . . . . . . .	Number	 00000014h   
VK_CLEAR . . . . . . . . . . . .	Number	 0000000Ch   
VK_CONTROL . . . . . . . . . . .	Number	 00000011h   
VK_DECIMAL . . . . . . . . . . .	Number	 0000006Eh   
VK_DELETE  . . . . . . . . . . .	Number	 0000002Eh   
VK_DIVIDE  . . . . . . . . . . .	Number	 0000006Fh   
VK_DOWN  . . . . . . . . . . . .	Number	 00000028h   
VK_END . . . . . . . . . . . . .	Number	 00000023h   
VK_ESCAPE  . . . . . . . . . . .	Number	 0000001Bh   
VK_EXECUTE . . . . . . . . . . .	Number	 0000002Bh   
VK_F10 . . . . . . . . . . . . .	Number	 00000079h   
VK_F11 . . . . . . . . . . . . .	Number	 0000007Ah   
VK_F12 . . . . . . . . . . . . .	Number	 0000007Bh   
VK_F13 . . . . . . . . . . . . .	Number	 0000007Ch   
VK_F14 . . . . . . . . . . . . .	Number	 0000007Dh   
VK_F15 . . . . . . . . . . . . .	Number	 0000007Eh   
VK_F16 . . . . . . . . . . . . .	Number	 0000007Fh   
VK_F17 . . . . . . . . . . . . .	Number	 00000080h   
VK_F18 . . . . . . . . . . . . .	Number	 00000081h   
VK_F19 . . . . . . . . . . . . .	Number	 00000082h   
VK_F1  . . . . . . . . . . . . .	Number	 00000070h   
VK_F20 . . . . . . . . . . . . .	Number	 00000083h   
VK_F21 . . . . . . . . . . . . .	Number	 00000084h   
VK_F22 . . . . . . . . . . . . .	Number	 00000085h   
VK_F23 . . . . . . . . . . . . .	Number	 00000086h   
VK_F24 . . . . . . . . . . . . .	Number	 00000087h   
VK_F2  . . . . . . . . . . . . .	Number	 00000071h   
VK_F3  . . . . . . . . . . . . .	Number	 00000072h   
VK_F4  . . . . . . . . . . . . .	Number	 00000073h   
VK_F5  . . . . . . . . . . . . .	Number	 00000074h   
VK_F6  . . . . . . . . . . . . .	Number	 00000075h   
VK_F7  . . . . . . . . . . . . .	Number	 00000076h   
VK_F8  . . . . . . . . . . . . .	Number	 00000077h   
VK_F9  . . . . . . . . . . . . .	Number	 00000078h   
VK_HELP  . . . . . . . . . . . .	Number	 0000002Fh   
VK_HOME  . . . . . . . . . . . .	Number	 00000024h   
VK_INSERT  . . . . . . . . . . .	Number	 0000002Dh   
VK_LBUTTON . . . . . . . . . . .	Number	 00000001h   
VK_LCONTROL  . . . . . . . . . .	Number	 000000A2h   
VK_LEFT  . . . . . . . . . . . .	Number	 00000025h   
VK_LMENU . . . . . . . . . . . .	Number	 000000A4h   
VK_LSHIFT  . . . . . . . . . . .	Number	 000000A0h   
VK_MENU  . . . . . . . . . . . .	Number	 00000012h   
VK_MULTIPLY  . . . . . . . . . .	Number	 0000006Ah   
VK_NEXT  . . . . . . . . . . . .	Number	 00000022h   
VK_NUMLOCK . . . . . . . . . . .	Number	 00000090h   
VK_NUMPAD0 . . . . . . . . . . .	Number	 00000060h   
VK_NUMPAD1 . . . . . . . . . . .	Number	 00000061h   
VK_NUMPAD2 . . . . . . . . . . .	Number	 00000062h   
VK_NUMPAD3 . . . . . . . . . . .	Number	 00000063h   
VK_NUMPAD4 . . . . . . . . . . .	Number	 00000064h   
VK_NUMPAD5 . . . . . . . . . . .	Number	 00000065h   
VK_NUMPAD6 . . . . . . . . . . .	Number	 00000066h   
VK_NUMPAD7 . . . . . . . . . . .	Number	 00000067h   
VK_NUMPAD8 . . . . . . . . . . .	Number	 00000068h   
VK_NUMPAD9 . . . . . . . . . . .	Number	 00000069h   
VK_PAUSE . . . . . . . . . . . .	Number	 00000013h   
VK_PRINT . . . . . . . . . . . .	Number	 0000002Ah   
VK_PRIOR . . . . . . . . . . . .	Number	 00000021h   
VK_RBUTTON . . . . . . . . . . .	Number	 00000002h   
VK_RCONTROL  . . . . . . . . . .	Number	 000000A3h   
VK_RETURN  . . . . . . . . . . .	Number	 0000000Dh   
VK_RIGHT . . . . . . . . . . . .	Number	 00000027h   
VK_RMENU . . . . . . . . . . . .	Number	 000000A5h   
VK_RSHIFT  . . . . . . . . . . .	Number	 000000A1h   
VK_SCROLL  . . . . . . . . . . .	Number	 00000091h   
VK_SEPARATER . . . . . . . . . .	Number	 0000006Ch   
VK_SHIFT . . . . . . . . . . . .	Number	 00000010h   
VK_SNAPSHOT  . . . . . . . . . .	Number	 0000002Ch   
VK_SPACE . . . . . . . . . . . .	Number	 00000020h   
VK_SUBTRACT  . . . . . . . . . .	Number	 0000006Dh   
VK_TAB . . . . . . . . . . . . .	Number	 00000009h   
VK_UP  . . . . . . . . . . . . .	Number	 00000026h   
WINDOW_BUFFER_SIZE_EVENT . . . .	Number	 00000004h   
WriteConsoleOutputCharacter  . .	Text   	 WriteConsoleOutputCharacterA
WriteConsole . . . . . . . . . .	Text   	 WriteConsoleA
ZERO . . . . . . . . . . . . . .	Number	 00000000h   
addressing_user  . . . . . . . .	Byte	 000000E8 _DATA	
ask_number . . . . . . . . . . .	Byte	 00000114 _DATA	
avg_preface  . . . . . . . . . .	Byte	 000001EF _DATA	
avg_remainder  . . . . . . . . .	DWord	 00000231 _DATA	
avg  . . . . . . . . . . . . . .	DWord	 000001EB _DATA	
black  . . . . . . . . . . . . .	Number	 00000000h   
blue . . . . . . . . . . . . . .	Number	 00000001h   
brown  . . . . . . . . . . . . .	Number	 00000006h   
count  . . . . . . . . . . . . .	DWord	 00000123 _DATA	
cyan . . . . . . . . . . . . . .	Number	 00000003h   
entered_num  . . . . . . . . . .	DWord	 00000127 _DATA	
exclamation_point  . . . . . . .	Byte	 000000F6 _DATA	
exit . . . . . . . . . . . . . .	Text   	 INVOKE ExitProcess,0
extra_credit_1 . . . . . . . . .	Byte	 00000239 _DATA	
extra_credit_2 . . . . . . . . .	Byte	 0000029B _DATA	
goodbye  . . . . . . . . . . . .	Byte	 000000F8 _DATA	
gray . . . . . . . . . . . . . .	Number	 00000008h   
green  . . . . . . . . . . . . .	Number	 00000002h   
instructions_2 . . . . . . . . .	Byte	 00000085 _DATA	
instructions . . . . . . . . . .	Byte	 0000004B _DATA	
lightBlue  . . . . . . . . . . .	Number	 00000009h   
lightCyan  . . . . . . . . . . .	Number	 0000000Bh   
lightGray  . . . . . . . . . . .	Number	 00000007h   
lightGreen . . . . . . . . . . .	Number	 0000000Ah   
lightMagenta . . . . . . . . . .	Number	 0000000Dh   
lightRed . . . . . . . . . . . .	Number	 0000000Ch   
magenta  . . . . . . . . . . . .	Number	 00000005h   
max_preface  . . . . . . . . . .	Byte	 00000195 _DATA	
max  . . . . . . . . . . . . . .	DWord	 00000171 _DATA	
min_preface  . . . . . . . . . .	Byte	 000001B2 _DATA	
min  . . . . . . . . . . . . . .	DWord	 00000175 _DATA	
new_remainder  . . . . . . . . .	DWord	 00000235 _DATA	
no_number  . . . . . . . . . . .	Byte	 000002C6 _DATA	
one_k_avg  . . . . . . . . . . .	DWord	 000002E6 _DATA	
one_k_preface  . . . . . . . . .	Byte	 000002F2 _DATA	
one_k_remain . . . . . . . . . .	DWord	 000002EE _DATA	
one_k_sum  . . . . . . . . . . .	DWord	 000002E2 _DATA	
one_k_val  . . . . . . . . . . .	DWord	 000002EA _DATA	
out_of_range . . . . . . . . . .	Byte	 0000012F _DATA	
red  . . . . . . . . . . . . . .	Number	 00000004h   
request_username . . . . . . . .	Byte	 00000037 _DATA	
round_avg_preface  . . . . . . .	Byte	 00000219 _DATA	
rounded_avg  . . . . . . . . . .	DWord	 00000215 _DATA	
sum_preface  . . . . . . . . . .	Byte	 000001CF _DATA	
sum  . . . . . . . . . . . . . .	DWord	 0000012B _DATA	
userName . . . . . . . . . . . .	Byte	 000000C7 _DATA	
valid_numbers  . . . . . . . . .	Byte	 00000186 _DATA	
welcome  . . . . . . . . . . . .	Byte	 00000000 _DATA	
white  . . . . . . . . . . . . .	Number	 0000000Fh   
wsprintf . . . . . . . . . . . .	Text   	 wsprintfA
yellow . . . . . . . . . . . . .	Number	 0000000Eh   
you_entered  . . . . . . . . . .	Byte	 00000179 _DATA	

	   0 Warnings
	   0 Errors
